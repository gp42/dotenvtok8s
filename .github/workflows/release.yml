name: Build and Release

on:
  push:
    branches:
    - '*'
    pull_request:
    - '*'
    tags:
    - 'v[0-9]+\.[0-9]+\.[0-9]+'

jobs:

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:

    - name: Set up Go 1.x
      uses: actions/setup-go@v2
      with:
        go-version: ^1.13
      id: go

    - name: Set up Gawk
      run: |
        if [ -z "$(which gawk)" ]
        then
          apt-get update &&\
            apt-get install -y gawk
        fi

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Get dependencies
      run: |
        go get -v -t -d ./...

    - name: Build
      run: make

    - name: Test
      run: make test

    - name: Package
      run: make package

    - name: Upload Artifacts
      uses: actions/upload-artifact@v2
      if: startsWith(github.ref, 'refs/tags')
      with:
        name: dotenvtok8s-${{ github.event.after }}
        path: build/*.tar.gz
        if-no-files-found: error
      
  release:
    name: Release
    runs-on: ubuntu-latest
    needs: build
    if: startsWith(github.ref, 'refs/tags')
    steps:

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Download Artifacts
      uses: actions/download-artifact@v2
      with:
        name: dotenvtok8s-${{ github.event.after }}
      
    - name: Generate Release Message
      run: |
        cat CHANGELOG.md | gawk 'BEGIN{RS="\n?# v[0-9]+.[0-9]+.[0-9]+\n" ; ORS=OFS="" } NR == 2' > \
          release.txt

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        body_path: release.txt
        draft: false
        prerelease: false

    - name: Get Version
      id: get_version
      run: echo ::set-output name=VERSION::${GITHUB_REF#refs/tags/}

    - name: Upload Release Asset - darwin
      id: upload-release-asset-darwin
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: dotenvtok8s-darwin-amd64.tar.gz
        asset_name: dotenvtok8s-darwin-amd64-${{ steps.get_version.outputs.VERSION }}.tar.gz
        asset_content_type: application/tar+gzip

    - name: Upload Release Asset - linux
      id: upload-release-asset-linux
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: dotenvtok8s-linux-amd64.tar.gz
        asset_name: dotenvtok8s-linux-amd64-${{ steps.get_version.outputs.VERSION }}.tar.gz
        asset_content_type: application/tar+gzip
